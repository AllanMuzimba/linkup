rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Simplified helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }
    
    // Simplified admin check - removed complex cross-document references
    function isAdmin() {
      return false; // Simplified for now - admin checks moved to application layer
    }
    
    // Users collection - Allow public read access for basic profile information
    match /users/{userId} {
      allow read: if true; // Allow public read access for user profiles to support post author display
      allow write: if isOwner(userId) || isAdmin();
      allow create: if isAuthenticated(); // Allow users to create their own document
    }
    
    // Posts collection - Allow public read access per specification
    match /posts/{postId} {
      allow read: if true; // Public read access for all users including unauthenticated
      allow create: if isAuthenticated();
      allow update: if isAuthenticated() && (isOwner(resource.data.authorId) || isAdmin());
      allow delete: if isAuthenticated() && (isOwner(resource.data.authorId) || isAdmin());
    }
    
    // Comments collection
    match /comments/{commentId} {
      allow read: if true; // Public read access for comments
      allow create: if isAuthenticated();
      allow update: if isAuthenticated() && (isOwner(resource.data.authorId) || isAdmin());
      allow delete: if isAuthenticated() && (isOwner(resource.data.authorId) || isAdmin());
    }
    
    // Stories collection - Allow public read access per specification
    match /stories/{storyId} {
      allow read: if true; // Public read access for all users including unauthenticated
      allow create: if isAuthenticated();
      allow update: if isAuthenticated() && (isOwner(resource.data.authorId) || isAdmin());
      allow delete: if isAuthenticated() && (isOwner(resource.data.authorId) || isAdmin());
      
      // Story views subcollection
      match /views/{viewId} {
        allow read: if isAuthenticated();
        allow create: if isAuthenticated();
      }
    }
    
    // Chats collection - Simplified for better reliability
    match /chats/{chatId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update: if isAuthenticated();
      allow delete: if isAuthenticated();
    }
    
    // Messages collection
    match /messages/{messageId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update: if isAuthenticated() && (isOwner(resource.data.senderId) || isAdmin());
      allow delete: if isAuthenticated() && (isOwner(resource.data.senderId) || isAdmin());
      
      // Message reactions subcollection
      match /reactions/{reactionId} {
        allow read: if isAuthenticated();
        allow create: if isAuthenticated();
        allow delete: if isAuthenticated() && (isOwner(resource.data.userId) || isAdmin());
      }
    }
    
    // Likes collection
    match /likes/{likeId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow delete: if isAuthenticated() && (isOwner(resource.data.userId) || isAdmin());
    }
    
    // Follows collection
    match /follows/{followId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow delete: if isAuthenticated() && (isOwner(resource.data.followerId) || isAdmin());
    }
    
    // Friend requests collection
    match /friendRequests/{requestId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update: if isAuthenticated();
      allow delete: if isAuthenticated();
    }
    
    // Friendships collection
    match /friendships/{friendshipId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update: if isAuthenticated();
      allow delete: if isAuthenticated();
    }
    
    // Notifications collection
    match /notifications/{notificationId} {
      allow read: if isAuthenticated() && (isOwner(resource.data.userId) || isAdmin());
      allow create: if isAuthenticated();
      allow update: if isAuthenticated() && (isOwner(resource.data.userId) || isAdmin());
      allow delete: if isAuthenticated() && (isOwner(resource.data.userId) || isAdmin());
    }
    
    // Reports collection
    match /reports/{reportId} {
      allow read: if isAdmin();
      allow create: if isAuthenticated();
      allow update: if isAdmin();
      allow delete: if isAdmin();
    }
    
    // Analytics collection
    match /analytics/{analyticsId} {
      allow read: if isAdmin();
      allow write: if false; // Only Cloud Functions can write
    }
    
    // System settings
    match /systemSettings/{settingId} {
      allow read: if isAdmin();
      allow write: if isAdmin();
    }
    
    // Bulk notifications
    match /bulkNotifications/{bulkId} {
      allow read: if isAdmin();
      allow write: if isAdmin();
    }
  }
}
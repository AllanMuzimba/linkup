rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    // User avatars and cover images
    match /users/{userId}/{filename} {
      allow read: if true; // Public read for profile images
      allow write: if request.auth != null && request.auth.uid == userId
        && request.resource.size < 5 * 1024 * 1024 // 5MB limit
        && request.resource.contentType.matches('image/.*');
    }
    
    // Post images and videos
    match /posts/{postId}/{filename} {
      allow read: if request.auth != null;
      allow write: if request.auth != null
        && ((request.resource.contentType.matches('image/.*') && request.resource.size < 5 * 1024 * 1024) // 5MB for images
        || (request.resource.contentType.matches('video/.*') && request.resource.size < 50 * 1024 * 1024)); // 50MB for videos
    }
    
    // Story media
    match /stories/{storyId}/{filename} {
      allow read: if request.auth != null;
      allow write: if request.auth != null
        && ((request.resource.contentType.matches('image/.*') && request.resource.size < 5 * 1024 * 1024) // 5MB for images
        || (request.resource.contentType.matches('video/.*') && request.resource.size < 20 * 1024 * 1024)); // 20MB for story videos
    }
    
    // Chat attachments
    match /chats/{chatId}/attachments/{filename} {
      allow read: if request.auth != null; // Additional auth check needed in app logic
      allow write: if request.auth != null
        && ((request.resource.contentType.matches('image/.*') && request.resource.size < 5 * 1024 * 1024) // 5MB for images
        || (request.resource.contentType.matches('video/.*') && request.resource.size < 50 * 1024 * 1024) // 50MB for videos
        || (request.resource.contentType.matches('audio/.*') && request.resource.size < 10 * 1024 * 1024) // 10MB for audio
        || (request.resource.contentType.matches('application/.*') && request.resource.size < 10 * 1024 * 1024)); // 10MB for documents
    }
    
    // Voice messages
    match /voice-messages/{chatId}/{filename} {
      allow read: if request.auth != null;
      allow write: if request.auth != null
        && request.resource.contentType.matches('audio/.*')
        && request.resource.size < 5 * 1024 * 1024; // 5MB for voice messages
    }
    
    // Temporary uploads (for processing)
    match /temp/{userId}/{filename} {
      allow read, write: if request.auth != null && request.auth.uid == userId
        && request.resource.size < 100 * 1024 * 1024; // 100MB temp limit
    }
  }
}
